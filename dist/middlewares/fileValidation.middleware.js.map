{"version":3,"sources":["../../src/middlewares/fileValidation.middleware.ts"],"sourcesContent":["import { NextFunction, Response } from 'express';\nimport { HttpException } from '@exceptions/HttpException';\nimport { RequestWithUser } from '@interfaces/auth.interface';\n\nconst fileMiddleware = async (req: RequestWithUser, res: Response, next: NextFunction) => {\n  \n  \n  try {\n    if (req.files) {\n      const fileeData = req.files;\n      \n      const filesTooLarge = [];\n      if (fileeData.frontSide) {\n        for (let key in fileeData) {\n          if (fileeData[key][0].size > 5000000) filesTooLarge.push(fileeData[key][0].fieldname);\n          \n        }\n        if (filesTooLarge.length > 0) {\n          return next(\n            new HttpException(\n            500,\n              `${\n                filesTooLarge.length > 0\n                  ? \"a file is too large maximum is 5mb and a file isn't an image\"\n                  : filesTooLarge.length > 0 && 'a file is too large'\n              }`,\n            ),\n          );\n        }\n        \n        next();\n      } else {\n        for (let key in fileeData) {\n          if (fileeData[key].size > 5000000) filesTooLarge.push(fileeData[key].fieldname);\n        }\n        if (filesTooLarge.length > 0) {\n          return next(\n            new HttpException(\n              500,\n              `${\n                filesTooLarge.length > 0\n                  ? \"a file is too large maximum is 5mb and a file isn't an image\"\n                  : filesTooLarge.length > 0 && 'a file is too large'\n              }`,\n            ),\n          );\n        }\n        next();\n      } \n    } else if (req.file) {\n      const fileData = req.file;\n      if (fileData.size > 5000000) return next(new HttpException(401, `${fileData.fieldname} is too large`));\n      next();\n    } else {\n      next(new HttpException(500, 'file needed'));\n    }\n  } catch (error) {\n    next(new HttpException(500, error));\n  }\n};\n\nexport default fileMiddleware;\n"],"names":["fileMiddleware","req","res","next","files","fileeData","filesTooLarge","frontSide","key","size","push","fieldname","length","HttpException","file","fileData","error"],"mappings":";;;;+BA6DA;;;eAAA;;;+BA5D8B;AAG9B,MAAMA,iBAAiB,OAAOC,KAAsBC,KAAeC;IAGjE,IAAI;QACF,IAAIF,IAAIG,KAAK,EAAE;YACb,MAAMC,YAAYJ,IAAIG,KAAK;YAE3B,MAAME,gBAAgB,EAAE;YACxB,IAAID,UAAUE,SAAS,EAAE;gBACvB,IAAK,IAAIC,OAAOH,UAAW;oBACzB,IAAIA,SAAS,CAACG,IAAI,CAAC,EAAE,CAACC,IAAI,GAAG,SAASH,cAAcI,IAAI,CAACL,SAAS,CAACG,IAAI,CAAC,EAAE,CAACG,SAAS;gBAEtF;gBACA,IAAIL,cAAcM,MAAM,GAAG,GAAG;oBAC5B,OAAOT,KACL,IAAIU,4BAAa,CACjB,KACE,CAAC,EACCP,cAAcM,MAAM,GAAG,IACnB,iEACAN,cAAcM,MAAM,GAAG,KAAK,sBACjC,CAAC;gBAGR;gBAEAT;YACF,OAAO;gBACL,IAAK,IAAIK,OAAOH,UAAW;oBACzB,IAAIA,SAAS,CAACG,IAAI,CAACC,IAAI,GAAG,SAASH,cAAcI,IAAI,CAACL,SAAS,CAACG,IAAI,CAACG,SAAS;gBAChF;gBACA,IAAIL,cAAcM,MAAM,GAAG,GAAG;oBAC5B,OAAOT,KACL,IAAIU,4BAAa,CACf,KACA,CAAC,EACCP,cAAcM,MAAM,GAAG,IACnB,iEACAN,cAAcM,MAAM,GAAG,KAAK,sBACjC,CAAC;gBAGR;gBACAT;YACF;QACF,OAAO,IAAIF,IAAIa,IAAI,EAAE;YACnB,MAAMC,WAAWd,IAAIa,IAAI;YACzB,IAAIC,SAASN,IAAI,GAAG,SAAS,OAAON,KAAK,IAAIU,4BAAa,CAAC,KAAK,CAAC,EAAEE,SAASJ,SAAS,CAAC,aAAa,CAAC;YACpGR;QACF,OAAO;YACLA,KAAK,IAAIU,4BAAa,CAAC,KAAK;QAC9B;IACF,EAAE,OAAOG,OAAO;QACdb,KAAK,IAAIU,4BAAa,CAAC,KAAKG;IAC9B;AACF;MAEA,WAAehB"}