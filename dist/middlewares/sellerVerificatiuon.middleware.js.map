{"version":3,"sources":["../../src/middlewares/sellerVerificatiuon.middleware.ts"],"sourcesContent":["import { NextFunction, Response } from 'express';\nimport { verify } from 'jsonwebtoken';\nimport { SECRET_KEY } from '@config';\nimport { HttpException } from '@exceptions/HttpException';\nimport { DataStoredInToken, RequestWithUser } from '@interfaces/auth.interface';\nimport { initializeDbConnection } from '@/app';\n\nconst authMiddleware = async (req: RequestWithUser, res: Response, next: NextFunction) => {\n  try {\n    const isSellerVerifiedSession = initializeDbConnection().session();\n    const userId = String(req.params.id);\n    if (userId) {\n      const isSellerVerified = await isSellerVerifiedSession.executeRead(tx =>\n        tx.run('match (u:user {u:user userId: $userId}-[:IS_A]-(s:seller) return s', {\n          userId: userId,\n        }),\n      );\n\n      if (isSellerVerified.records.map(record => record.get(\"s\").properties.verified)) {\n        next();\n      } else {\n        next(new HttpException(401, 'this user is not verified yet'));\n      }\n    } else {\n      next(new HttpException(404, 'user id needed'));\n    }\n  } catch (error) {\n    next(new HttpException(401, error));\n  }\n};\n\nexport default authMiddleware;\n"],"names":["authMiddleware","req","res","next","isSellerVerifiedSession","initializeDbConnection","session","userId","String","params","id","isSellerVerified","executeRead","tx","run","records","map","record","get","properties","verified","HttpException","error"],"mappings":";;;;+BA+BA;;;eAAA;;;+BA5B8B;qBAES;AAEvC,MAAMA,iBAAiB,OAAOC,KAAsBC,KAAeC;IACjE,IAAI;QACF,MAAMC,0BAA0BC,IAAAA,2BAAsB,IAAGC,OAAO;QAChE,MAAMC,SAASC,OAAOP,IAAIQ,MAAM,CAACC,EAAE;QACnC,IAAIH,QAAQ;YACV,MAAMI,mBAAmB,MAAMP,wBAAwBQ,WAAW,CAACC,CAAAA,KACjEA,GAAGC,GAAG,CAAC,sEAAsE;oBAC3EP,QAAQA;gBACV;YAGF,IAAII,iBAAiBI,OAAO,CAACC,GAAG,CAACC,CAAAA,SAAUA,OAAOC,GAAG,CAAC,KAAKC,UAAU,CAACC,QAAQ,GAAG;gBAC/EjB;YACF,OAAO;gBACLA,KAAK,IAAIkB,4BAAa,CAAC,KAAK;YAC9B;QACF,OAAO;YACLlB,KAAK,IAAIkB,4BAAa,CAAC,KAAK;QAC9B;IACF,EAAE,OAAOC,OAAO;QACdnB,KAAK,IAAIkB,4BAAa,CAAC,KAAKC;IAC9B;AACF;MAEA,WAAetB"}