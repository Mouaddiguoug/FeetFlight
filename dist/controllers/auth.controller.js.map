{"version":3,"sources":["../../src/controllers/auth.controller.ts"],"sourcesContent":["import { NextFunction, Request, Response } from 'express';\nimport { RequestWithUser } from '@interfaces/auth.interface';\nimport { User } from '@interfaces/users.interface';\nimport AuthService from '@services/auth.service';\n\nclass AuthController {\n  public authService = new AuthService();\n\n  public signUp = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const userData = req.body;\n      const signUpUserData = await this.authService.signup(userData);\n\n      signUpUserData.message ? res.status(400).json(signUpUserData) : res.status(201).json(signUpUserData);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  public logIn = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const userData = req.body;\n      const loggedInData = await this.authService.login(userData);\n      loggedInData.message ? res.status(403).json(loggedInData) : res.status(200).json(loggedInData);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  public resendVerificationEMail = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const email = String(req.params.email);\n      await this.authService.resendVerificationEmail(email);\n      res.status(200);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  public changePassword = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const userData = req.body;\n      const email: string = String(req.params.email);\n      const chengedData = await this.authService.changePassword(email, userData);\n      console.log(chengedData.message);\n      \n      res.status(200).json(chengedData);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  public generateRefreshToken = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const id = req.body.id;\n      const loggedInData = await this.authService.refreshToken(id);\n      res.status(200).json(loggedInData);\n    } catch (error) {\n      next(error);\n    }\n  };\n\n  public logOut = async (req: RequestWithUser, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const userData: User = req.user;\n      const logOutUserData: User = await this.authService.logout(userData);\n\n      res.setHeader('Set-Cookie', ['Authorization=; Max-age=0']);\n      res.status(200).json({ data: logOutUserData, message: 'logout' });\n    } catch (error) {\n      next(error);\n    }\n  };\n}\n\nexport default AuthController;\n"],"names":["AuthController","authService","AuthService","signUp","req","res","next","userData","body","signUpUserData","signup","message","status","json","error","console","log","logIn","loggedInData","login","resendVerificationEMail","email","String","params","resendVerificationEmail","changePassword","chengedData","generateRefreshToken","id","refreshToken","logOut","user","logOutUserData","logout","setHeader","data"],"mappings":";;;;+BA2EA;;;eAAA;;;oEAxEwB;;;;;;;;;;;;;;;;;;;AAExB,IAAA,AAAMA,iBAAN,MAAMA;;QACJ,uBAAOC,eAAc,IAAIC,oBAAW;QAEpC,uBAAOC,UAAS,OAAOC,KAAcC,KAAeC;YAClD,IAAI;gBACF,MAAMC,WAAWH,IAAII,IAAI;gBACzB,MAAMC,iBAAiB,MAAM,IAAI,CAACR,WAAW,CAACS,MAAM,CAACH;gBAErDE,eAAeE,OAAO,GAAGN,IAAIO,MAAM,CAAC,KAAKC,IAAI,CAACJ,kBAAkBJ,IAAIO,MAAM,CAAC,KAAKC,IAAI,CAACJ;YACvF,EAAE,OAAOK,OAAO;gBACdC,QAAQC,GAAG,CAACF;YACd;QACF;QAEA,uBAAOG,SAAQ,OAAOb,KAAcC,KAAeC;YACjD,IAAI;gBACF,MAAMC,WAAWH,IAAII,IAAI;gBACzB,MAAMU,eAAe,MAAM,IAAI,CAACjB,WAAW,CAACkB,KAAK,CAACZ;gBAClDW,aAAaP,OAAO,GAAGN,IAAIO,MAAM,CAAC,KAAKC,IAAI,CAACK,gBAAgBb,IAAIO,MAAM,CAAC,KAAKC,IAAI,CAACK;YACnF,EAAE,OAAOJ,OAAO;gBACdC,QAAQC,GAAG,CAACF;YACd;QACF;QAEA,uBAAOM,2BAA0B,OAAOhB,KAAcC,KAAeC;YACnE,IAAI;gBACF,MAAMe,QAAQC,OAAOlB,IAAImB,MAAM,CAACF,KAAK;gBACrC,MAAM,IAAI,CAACpB,WAAW,CAACuB,uBAAuB,CAACH;gBAC/ChB,IAAIO,MAAM,CAAC;YACb,EAAE,OAAOE,OAAO;gBACdC,QAAQC,GAAG,CAACF;YACd;QACF;QAEA,uBAAOW,kBAAiB,OAAOrB,KAAcC,KAAeC;YAC1D,IAAI;gBACF,MAAMC,WAAWH,IAAII,IAAI;gBACzB,MAAMa,QAAgBC,OAAOlB,IAAImB,MAAM,CAACF,KAAK;gBAC7C,MAAMK,cAAc,MAAM,IAAI,CAACzB,WAAW,CAACwB,cAAc,CAACJ,OAAOd;gBACjEQ,QAAQC,GAAG,CAACU,YAAYf,OAAO;gBAE/BN,IAAIO,MAAM,CAAC,KAAKC,IAAI,CAACa;YACvB,EAAE,OAAOZ,OAAO;gBACdC,QAAQC,GAAG,CAACF;YACd;QACF;QAEA,uBAAOa,wBAAuB,OAAOvB,KAAcC,KAAeC;YAChE,IAAI;gBACF,MAAMsB,KAAKxB,IAAII,IAAI,CAACoB,EAAE;gBACtB,MAAMV,eAAe,MAAM,IAAI,CAACjB,WAAW,CAAC4B,YAAY,CAACD;gBACzDvB,IAAIO,MAAM,CAAC,KAAKC,IAAI,CAACK;YACvB,EAAE,OAAOJ,OAAO;gBACdR,KAAKQ;YACP;QACF;QAEA,uBAAOgB,UAAS,OAAO1B,KAAsBC,KAAeC;YAC1D,IAAI;gBACF,MAAMC,WAAiBH,IAAI2B,IAAI;gBAC/B,MAAMC,iBAAuB,MAAM,IAAI,CAAC/B,WAAW,CAACgC,MAAM,CAAC1B;gBAE3DF,IAAI6B,SAAS,CAAC,cAAc;oBAAC;iBAA4B;gBACzD7B,IAAIO,MAAM,CAAC,KAAKC,IAAI,CAAC;oBAAEsB,MAAMH;oBAAgBrB,SAAS;gBAAS;YACjE,EAAE,OAAOG,OAAO;gBACdR,KAAKQ;YACP;QACF;;AACF;MAEA,WAAed"}