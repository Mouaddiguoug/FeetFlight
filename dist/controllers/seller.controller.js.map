{"version":3,"sources":["../../src/controllers/seller.controller.ts"],"sourcesContent":["import { NextFunction, Request, Response } from 'express';\nimport sellerService from '@services/seller.service';\n\nclass sellerController {\n  public sellerService = new sellerService();\n\n  public getSubscriptionPlans = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const userId = String(req.params.id);\n\n      const subscriptionPlans = await this.sellerService.getSubscriptiionPlans(userId);\n\n      res.status(200).json({ subscriptionPlans });\n    } catch (error) {\n      next(error);\n    }\n  };\n\n  public createSubscribePlans = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const userId = String(req.params.id);\n      const subscriptionPlansData = req.body;\n\n      const createdSubscriptionPlans = await this.sellerService.createSubscribePlans(userId, subscriptionPlansData);\n\n      res.status(200).json({ createdSubscriptionPlans });\n    } catch (error) {\n      next(error);\n    }\n  };\n\n  public getFollowersCount = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const sellerId = String(req.params.id);\n      \n      const followersCount = await this.sellerService.getFollowersCount(sellerId);\n\n      res.status(201).json({ followers: followersCount });\n    } catch (error) {\n      next(error);\n    }\n  };\n\n  public requestWithdraw = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const userId = String(req.params.id);\n      const payoutAccountId = String(req.params.payoutAccountId);\n      \n      const requestedWithdraw = await this.sellerService.requestWithdraw(userId, payoutAccountId);\n\n      res.status(requestedWithdraw ? 201 : 400).json({message: requestedWithdraw ? \"Your withdraw request is being account has been added successfully!\" : \"Something went wrong!\"});\n    } catch (error) {\n      next(error);\n    }\n  };\n\n  public addPayoutAccount = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const userId = String(req.params.id);\n      const bankAccountData = req.body;\n      \n      const payoutAccount = await this.sellerService.addPayoutAccount(userId, bankAccountData);\n\n      res.status(payoutAccount ? 201 : 400).json({message: payoutAccount ? \"Your payout account has been added successfully!\" : \"Something went wrong!\"});\n    } catch (error) {\n      next(error);\n    }\n  };\n\n  public deletePayoutAccount = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const id = String(req.params.payoutAccountId);\n      \n      await this.sellerService.deletePayoutAccount(id);\n\n      res.status(201).json({message: \"Your payout account has been deleted successfully!\"});\n    } catch (error) {\n      next(error);\n    }\n  };\n\n  public getPayoutAccounts = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const userId = String(req.params.id);\n      \n      const payoutAccount = await this.sellerService.getPayoutAccounts(userId);\n\n      res.status(201).json(payoutAccount);\n    } catch (error) {\n      next(error);\n    }\n  };\n\n  public updatePlans = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const plans = req.body.data;\n      \n      const result = await this.sellerService.changePlans(plans);\n\n      res.status(201).json(result);\n    } catch (error) {\n      next(error);\n    }\n  };\n\n  public getAllSellers = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const result = await this.sellerService.getAllSellers();\n\n      res.status(201).json(result);\n    } catch (error) {\n      next(error);\n    }\n  };\n\n  public uploadSentPicture = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const userId = String(req.params.id);\n      const tipAmount = String(req.params.tipAmount);\n      const receiverId = String(req.params.receiverId);\n\n      const sentPictureDataFile = req.file;\n\n      const sentPictureData = await this.sellerService.uploadSentPicture(sentPictureDataFile, userId, tipAmount, receiverId);\n      res.status(201).json(sentPictureData);\n    } catch (error) {\n      next(error);\n    }\n  };\n\n  public uploadIdentityCard = async (req: Request, res: Response, next: NextFunction): Promise<void> => {\n    try {\n      const userId = String(req.params.id);\n      \n      const identityCardData = req.files;\n      \n      await this.sellerService.uploadIdentityCard(identityCardData, userId);\n\n      res.status(201).json({ message: \"identity card haq been uploaded successfully\", status: 200 });\n    } catch (error) {\n      next(error);\n    }\n  };\n}\n\nexport default sellerController;\n"],"names":["sellerController","sellerService","getSubscriptionPlans","req","res","next","userId","String","params","id","subscriptionPlans","getSubscriptiionPlans","status","json","error","createSubscribePlans","subscriptionPlansData","body","createdSubscriptionPlans","getFollowersCount","sellerId","followersCount","followers","requestWithdraw","payoutAccountId","requestedWithdraw","message","addPayoutAccount","bankAccountData","payoutAccount","deletePayoutAccount","getPayoutAccounts","updatePlans","plans","data","result","changePlans","getAllSellers","uploadSentPicture","tipAmount","receiverId","sentPictureDataFile","file","sentPictureData","uploadIdentityCard","identityCardData","files"],"mappings":"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"}