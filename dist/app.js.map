{"version":3,"sources":["../src/app.ts"],"sourcesContent":["import compression from 'compression';\nimport cookieParser from 'cookie-parser';\nimport cors from 'cors';\nimport express from 'express';\nimport helmet from 'helmet';\nimport neo4j from 'neo4j-driver';\nimport hpp from 'hpp';\nimport admin from \"firebase-admin\";\nimport morgan from 'morgan';\nimport swaggerJSDoc from 'swagger-jsdoc';\nimport swaggerUi from 'swagger-ui-express';\nimport { NODE_ENV, PORT, LOG_FORMAT, ORIGIN, CREDENTIALS } from '@config';\nimport { Routes } from '@interfaces/routes.interface';\nimport errorMiddleware from '@middlewares/error.middleware';\nimport { logger, stream } from '@utils/logger';\nimport nodemailer from 'nodemailer';\nimport hbs from 'nodemailer-express-handlebars';\nimport path from 'path';\nimport walletService from './services/wallet.service';\nimport UserService from './services/users.service';\nimport Stripe from 'stripe';\nimport NotificationService from './services/notification.service';\n\nexport const transporter = nodemailer.createTransport({\n  service: process.env.SERVICE,\n  secure: true,\n  auth: {\n    user: process.env.USER,\n    pass: process.env.PASS,\n  },\n});\n\nclass App {\n  public walletService = new walletService();\n  public userService = new UserService();\n  \n  public notificationService = new NotificationService();\n  public app: express.Application;\n  public env: string;\n  public port: string | number;\n\n  constructor(routes: Routes[]) {\n    this.app = express();\n    this.env = NODE_ENV;\n    this.port = PORT || 3000;\n    this.app.post('/webhook', express.raw({ type: 'application/json' }), async (req, res, next): Promise<void> => {\n      try {\n        const stripe = new Stripe(process.env.STRIPE_TEST_KEY, { apiVersion: '2022-11-15' });\n        let signature = req.headers['stripe-signature'];\n        if (!signature) res.status(201).json({ message: 'signature needed' });\n        let event;\n        try {\n          event = stripe.webhooks.constructEvent(req.body, signature, process.env.WEBHOOK_SIGNATURE);\n        } catch (err) {\n          console.log(err.message);\n        }\n\n        switch (event.type) {\n          case 'charge.succeeded':\n            console.log(event.data.object);\n          case 'checkout.session.completed':\n            switch (event.data.object.mode) {\n              case 'payment':\n                event.data.object.metadata.sellersIds.split(',').map((record: any) => {\n                  let sellerId = '';\n                  let postId = '';\n                  let amount = 0;\n                  record.split('.').map((record: any) => {\n                    switch (record.split(':')[0]) {\n                      case 'sellerId':\n                        sellerId = record.split(':')[1];\n                        break;\n                      case 'postId':\n                        postId = record.split(':')[1];\n                        break;\n                      case 'amount':\n                        amount = record.split(':')[1];\n                        break;\n                      default:\n                        break;\n                    }\n                  });\n                  this.userService.checkForSale(event.data.object.customer, postId).then(async exists => {\n                    if (exists) return;\n                    await this.userService.buyPost(postId, event.data.object.customer, sellerId, amount);\n                    await this.walletService.UpdateBalanceForPayment(sellerId, amount);\n                    const title = \"Album Sold\"\n                    const body = `congratulations, a customer just bought an album.`\n                    await this.notificationService.pushSellerNotificatons(sellerId, title, body)\n                   \n                  });\n\n                });\n                break;\n              case 'subscription':\n                this.userService.createSubscriptioninDb(\n                  event.data.object.customer,\n                  event.data.object.metadata.sellerId,\n                  event.data.object.metadata.subscriptionPlanTitle,\n                  event.data.object.metadata.subscriptionPlanPrice,\n                );\n                this.walletService.UpdateBalanceForSubscription(\n                  event.data.object.metadata.sellerId,\n                  event.data.object.metadata.subscriptionPlanPrice,\n                );\n                const title = \"Subscription\"\n                const body = `congratulations, a customer just subscribed to the plan ${event.data.object.metadata.subscriptionPlanTitle}`\n\n                this.notificationService.pushSellerNotificatons(event.data.object.metadata.sellerId, title, body)\n                break;\n              default:\n                break;\n            }\n\n            break;\n          case 'payment_method.attached':\n            const paymentMethod = event.data.object;\n            console.log(paymentMethod);\n            break;\n          default:\n            break;\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    });\n    this.initializeMiddlewares();\n    this.initializeRoutes(routes);\n    this.initializeSwagger();\n    this.initializeErrorHandling();\n    admin.initializeApp({\n      credential: admin.credential.cert(path.join(__dirname, \"./config/push_notification_key.json\")),\n      projectId: process.env.projectId\n    })\n  }\n\n  public listen() {\n    this.app.listen(this.port, () => {\n      logger.info(`=================================`);\n      logger.info(`======= ENV: ${this.env} =======`);\n      logger.info(`ðŸš€ App listening on the port ${this.port}`);\n      logger.info(`=================================`);\n    });\n  }\n\n  public getServer() {\n    return this.app;\n  }\n\n  private initializeMiddlewares() {\n    this.app.use(morgan(LOG_FORMAT, { stream }));\n    this.app.use(cors({ origin: ORIGIN, credentials: CREDENTIALS }));\n    this.app.use(hpp());\n    this.app.use(helmet());\n    this.app.use(compression());\n    this.app.use(express.json());\n    this.app.use(express.urlencoded({ extended: true }));\n    this.app.use(cookieParser());\n    this.app.use(\"/public\", express.static(path.resolve(path.join(__dirname, \"../public\"))));\n    transporter.use(\n      'compile',\n      hbs({\n        viewEngine: {\n          extname: '.handlebars',\n          layoutsDir: path.resolve(__dirname, '../public/views/'),\n          partialsDir: path.resolve(__dirname, '../public/views/'),\n          defaultLayout: \"verifying_email\"\n        },\n        viewPath: path.resolve(__dirname, '../public/views/'),\n        extName: '.handlebars',\n      }),\n    );\n  }\n\n  private initializeRoutes(routes: Routes[]) {\n    routes.forEach(route => {\n      this.app.use('/', route.router);\n    });\n  }\n\n  private initializeSwagger() {\n    const options = {\n      swaggerDefinition: {\n        info: {\n          title: 'REST API',\n          version: '1.0.0',\n          description: 'Example docs',\n        },\n      },\n      apis: ['swagger.yaml'],\n    };\n\n    const specs = swaggerJSDoc(options);\n    this.app.use('/api-docs', swaggerUi.serve, swaggerUi.setup(specs));\n  }\n\n  private initializeErrorHandling() {\n    this.app.use(errorMiddleware);\n  }\n}\n\nexport const stripe = new Stripe(process.env.STRIPE_TEST_KEY, { apiVersion: '2022-11-15' });\n\nexport function initializeDbConnection() {\n  try {\n    const driver = neo4j.driver(process.env.NEO4J_URI, neo4j.auth.basic(process.env.NEO4J_USERNAME, process.env.NEO4J_PASSWORD));\n\n    driver.verifyConnectivity();\n    console.log('Driver created');\n    return driver;\n  } catch (error) {\n    console.log(`connectivity verification failed. ${error}`);\n  }\n}\n\nexport default App;\n"],"names":["transporter","stripe","initializeDbConnection","nodemailer","createTransport","service","process","env","SERVICE","secure","auth","user","USER","pass","PASS","App","listen","app","port","logger","info","getServer","initializeMiddlewares","use","morgan","LOG_FORMAT","stream","cors","origin","ORIGIN","credentials","CREDENTIALS","hpp","helmet","compression","express","json","urlencoded","extended","cookieParser","static","path","resolve","join","__dirname","hbs","viewEngine","extname","layoutsDir","partialsDir","defaultLayout","viewPath","extName","initializeRoutes","routes","forEach","route","router","initializeSwagger","options","swaggerDefinition","title","version","description","apis","specs","swaggerJSDoc","swaggerUi","serve","setup","initializeErrorHandling","errorMiddleware","constructor","walletService","userService","UserService","notificationService","NotificationService","NODE_ENV","PORT","post","raw","type","req","res","next","Stripe","STRIPE_TEST_KEY","apiVersion","signature","headers","status","message","event","webhooks","constructEvent","body","WEBHOOK_SIGNATURE","err","console","log","data","object","mode","metadata","sellersIds","split","map","record","sellerId","postId","amount","checkForSale","customer","then","exists","buyPost","UpdateBalanceForPayment","pushSellerNotificatons","createSubscriptioninDb","subscriptionPlanTitle","subscriptionPlanPrice","UpdateBalanceForSubscription","paymentMethod","error","admin","initializeApp","credential","cert","projectId","driver","neo4j","NEO4J_URI","basic","NEO4J_USERNAME","NEO4J_PASSWORD","verifyConnectivity"],"mappings":";;;;;;;;;;;IAuBaA,WAAW;eAAXA;;IAkLAC,MAAM;eAANA;;IAEGC,sBAAsB;eAAtBA;;IAYhB,OAAmB;eAAnB;;;oEAvNwB;qEACC;6DACR;gEACG;+DACD;oEACD;4DACF;sEACE;+DACC;qEACM;yEACH;wBAC0C;wEAEpC;wBACG;mEACR;oFACP;6DACC;sEACS;qEACF;+DACL;4EACa;;;;;;;;;;;;;;;;;;;AAEzB,MAAMF,cAAcG,mBAAU,CAACC,eAAe,CAAC;IACpDC,SAASC,QAAQC,GAAG,CAACC,OAAO;IAC5BC,QAAQ;IACRC,MAAM;QACJC,MAAML,QAAQC,GAAG,CAACK,IAAI;QACtBC,MAAMP,QAAQC,GAAG,CAACO,IAAI;IACxB;AACF;AAEA,IAAA,AAAMC,MAAN,MAAMA;IAwGGC,SAAS;QACd,IAAI,CAACC,GAAG,CAACD,MAAM,CAAC,IAAI,CAACE,IAAI,EAAE;YACzBC,cAAM,CAACC,IAAI,CAAC,CAAC,iCAAiC,CAAC;YAC/CD,cAAM,CAACC,IAAI,CAAC,CAAC,aAAa,EAAE,IAAI,CAACb,GAAG,CAAC,QAAQ,CAAC;YAC9CY,cAAM,CAACC,IAAI,CAAC,CAAC,6BAA6B,EAAE,IAAI,CAACF,IAAI,CAAC,CAAC;YACvDC,cAAM,CAACC,IAAI,CAAC,CAAC,iCAAiC,CAAC;QACjD;IACF;IAEOC,YAAY;QACjB,OAAO,IAAI,CAACJ,GAAG;IACjB;IAEQK,wBAAwB;QAC9B,IAAI,CAACL,GAAG,CAACM,GAAG,CAACC,IAAAA,eAAM,EAACC,kBAAU,EAAE;YAAEC,QAAAA,cAAM;QAAC;QACzC,IAAI,CAACT,GAAG,CAACM,GAAG,CAACI,IAAAA,aAAI,EAAC;YAAEC,QAAQC,cAAM;YAAEC,aAAaC,mBAAW;QAAC;QAC7D,IAAI,CAACd,GAAG,CAACM,GAAG,CAACS,IAAAA,YAAG;QAChB,IAAI,CAACf,GAAG,CAACM,GAAG,CAACU,IAAAA,eAAM;QACnB,IAAI,CAAChB,GAAG,CAACM,GAAG,CAACW,IAAAA,oBAAW;QACxB,IAAI,CAACjB,GAAG,CAACM,GAAG,CAACY,gBAAO,CAACC,IAAI;QACzB,IAAI,CAACnB,GAAG,CAACM,GAAG,CAACY,gBAAO,CAACE,UAAU,CAAC;YAAEC,UAAU;QAAK;QACjD,IAAI,CAACrB,GAAG,CAACM,GAAG,CAACgB,IAAAA,qBAAY;QACzB,IAAI,CAACtB,GAAG,CAACM,GAAG,CAAC,WAAWY,gBAAO,CAACK,MAAM,CAACC,aAAI,CAACC,OAAO,CAACD,aAAI,CAACE,IAAI,CAACC,WAAW;QACzE5C,YAAYuB,GAAG,CACb,WACAsB,IAAAA,oCAAG,EAAC;YACFC,YAAY;gBACVC,SAAS;gBACTC,YAAYP,aAAI,CAACC,OAAO,CAACE,WAAW;gBACpCK,aAAaR,aAAI,CAACC,OAAO,CAACE,WAAW;gBACrCM,eAAe;YACjB;YACAC,UAAUV,aAAI,CAACC,OAAO,CAACE,WAAW;YAClCQ,SAAS;QACX;IAEJ;IAEQC,iBAAiBC,MAAgB,EAAE;QACzCA,OAAOC,OAAO,CAACC,CAAAA;YACb,IAAI,CAACvC,GAAG,CAACM,GAAG,CAAC,KAAKiC,MAAMC,MAAM;QAChC;IACF;IAEQC,oBAAoB;QAC1B,MAAMC,UAAU;YACdC,mBAAmB;gBACjBxC,MAAM;oBACJyC,OAAO;oBACPC,SAAS;oBACTC,aAAa;gBACf;YACF;YACAC,MAAM;gBAAC;aAAe;QACxB;QAEA,MAAMC,QAAQC,IAAAA,qBAAY,EAACP;QAC3B,IAAI,CAAC1C,GAAG,CAACM,GAAG,CAAC,aAAa4C,yBAAS,CAACC,KAAK,EAAED,yBAAS,CAACE,KAAK,CAACJ;IAC7D;IAEQK,0BAA0B;QAChC,IAAI,CAACrD,GAAG,CAACM,GAAG,CAACgD,wBAAe;IAC9B;IA7JAC,YAAYlB,MAAgB,CAAE;QAR9B,uBAAOmB,iBAAgB,IAAIA,sBAAa;QACxC,uBAAOC,eAAc,IAAIC,qBAAW;QAEpC,uBAAOC,uBAAsB,IAAIC,4BAAmB;QACpD,uBAAO5D,OAAP,KAAA;QACA,uBAAOV,OAAP,KAAA;QACA,uBAAOW,QAAP,KAAA;QAGE,IAAI,CAACD,GAAG,GAAGkB,IAAAA,gBAAO;QAClB,IAAI,CAAC5B,GAAG,GAAGuE,gBAAQ;QACnB,IAAI,CAAC5D,IAAI,GAAG6D,YAAI,IAAI;QACpB,IAAI,CAAC9D,GAAG,CAAC+D,IAAI,CAAC,YAAY7C,gBAAO,CAAC8C,GAAG,CAAC;YAAEC,MAAM;QAAmB,IAAI,OAAOC,KAAKC,KAAKC;YACpF,IAAI;gBACF,MAAMpF,SAAS,IAAIqF,eAAM,CAAChF,QAAQC,GAAG,CAACgF,eAAe,EAAE;oBAAEC,YAAY;gBAAa;gBAClF,IAAIC,YAAYN,IAAIO,OAAO,CAAC,mBAAmB;gBAC/C,IAAI,CAACD,WAAWL,IAAIO,MAAM,CAAC,KAAKvD,IAAI,CAAC;oBAAEwD,SAAS;gBAAmB;gBACnE,IAAIC;gBACJ,IAAI;oBACFA,QAAQ5F,OAAO6F,QAAQ,CAACC,cAAc,CAACZ,IAAIa,IAAI,EAAEP,WAAWnF,QAAQC,GAAG,CAAC0F,iBAAiB;gBAC3F,EAAE,OAAOC,KAAK;oBACZC,QAAQC,GAAG,CAACF,IAAIN,OAAO;gBACzB;gBAEA,OAAQC,MAAMX,IAAI;oBAChB,KAAK;wBACHiB,QAAQC,GAAG,CAACP,MAAMQ,IAAI,CAACC,MAAM;oBAC/B,KAAK;wBACH,OAAQT,MAAMQ,IAAI,CAACC,MAAM,CAACC,IAAI;4BAC5B,KAAK;gCACHV,MAAMQ,IAAI,CAACC,MAAM,CAACE,QAAQ,CAACC,UAAU,CAACC,KAAK,CAAC,KAAKC,GAAG,CAAC,CAACC;oCACpD,IAAIC,WAAW;oCACf,IAAIC,SAAS;oCACb,IAAIC,SAAS;oCACbH,OAAOF,KAAK,CAAC,KAAKC,GAAG,CAAC,CAACC;wCACrB,OAAQA,OAAOF,KAAK,CAAC,IAAI,CAAC,EAAE;4CAC1B,KAAK;gDACHG,WAAWD,OAAOF,KAAK,CAAC,IAAI,CAAC,EAAE;gDAC/B;4CACF,KAAK;gDACHI,SAASF,OAAOF,KAAK,CAAC,IAAI,CAAC,EAAE;gDAC7B;4CACF,KAAK;gDACHK,SAASH,OAAOF,KAAK,CAAC,IAAI,CAAC,EAAE;gDAC7B;4CACF;gDACE;wCACJ;oCACF;oCACA,IAAI,CAAChC,WAAW,CAACsC,YAAY,CAACnB,MAAMQ,IAAI,CAACC,MAAM,CAACW,QAAQ,EAAEH,QAAQI,IAAI,CAAC,OAAMC;wCAC3E,IAAIA,QAAQ;wCACZ,MAAM,IAAI,CAACzC,WAAW,CAAC0C,OAAO,CAACN,QAAQjB,MAAMQ,IAAI,CAACC,MAAM,CAACW,QAAQ,EAAEJ,UAAUE;wCAC7E,MAAM,IAAI,CAACtC,aAAa,CAAC4C,uBAAuB,CAACR,UAAUE;wCAC3D,MAAMlD,QAAQ;wCACd,MAAMmC,OAAO,CAAC,iDAAiD,CAAC;wCAChE,MAAM,IAAI,CAACpB,mBAAmB,CAAC0C,sBAAsB,CAACT,UAAUhD,OAAOmC;oCAEzE;gCAEF;gCACA;4BACF,KAAK;gCACH,IAAI,CAACtB,WAAW,CAAC6C,sBAAsB,CACrC1B,MAAMQ,IAAI,CAACC,MAAM,CAACW,QAAQ,EAC1BpB,MAAMQ,IAAI,CAACC,MAAM,CAACE,QAAQ,CAACK,QAAQ,EACnChB,MAAMQ,IAAI,CAACC,MAAM,CAACE,QAAQ,CAACgB,qBAAqB,EAChD3B,MAAMQ,IAAI,CAACC,MAAM,CAACE,QAAQ,CAACiB,qBAAqB;gCAElD,IAAI,CAAChD,aAAa,CAACiD,4BAA4B,CAC7C7B,MAAMQ,IAAI,CAACC,MAAM,CAACE,QAAQ,CAACK,QAAQ,EACnChB,MAAMQ,IAAI,CAACC,MAAM,CAACE,QAAQ,CAACiB,qBAAqB;gCAElD,MAAM5D,QAAQ;gCACd,MAAMmC,OAAO,CAAC,wDAAwD,EAAEH,MAAMQ,IAAI,CAACC,MAAM,CAACE,QAAQ,CAACgB,qBAAqB,CAAC,CAAC;gCAE1H,IAAI,CAAC5C,mBAAmB,CAAC0C,sBAAsB,CAACzB,MAAMQ,IAAI,CAACC,MAAM,CAACE,QAAQ,CAACK,QAAQ,EAAEhD,OAAOmC;gCAC5F;4BACF;gCACE;wBACJ;wBAEA;oBACF,KAAK;wBACH,MAAM2B,gBAAgB9B,MAAMQ,IAAI,CAACC,MAAM;wBACvCH,QAAQC,GAAG,CAACuB;wBACZ;oBACF;wBACE;gBACJ;YACF,EAAE,OAAOC,OAAO;gBACdzB,QAAQC,GAAG,CAACwB;YACd;QACF;QACA,IAAI,CAACtG,qBAAqB;QAC1B,IAAI,CAAC+B,gBAAgB,CAACC;QACtB,IAAI,CAACI,iBAAiB;QACtB,IAAI,CAACY,uBAAuB;QAC5BuD,sBAAK,CAACC,aAAa,CAAC;YAClBC,YAAYF,sBAAK,CAACE,UAAU,CAACC,IAAI,CAACvF,aAAI,CAACE,IAAI,CAACC,WAAW;YACvDqF,WAAW3H,QAAQC,GAAG,CAAC0H,SAAS;QAClC;IACF;AAiEF;AAEO,MAAMhI,SAAS,IAAIqF,eAAM,CAAChF,QAAQC,GAAG,CAACgF,eAAe,EAAE;IAAEC,YAAY;AAAa;AAElF,SAAStF;IACd,IAAI;QACF,MAAMgI,SAASC,oBAAK,CAACD,MAAM,CAAC5H,QAAQC,GAAG,CAAC6H,SAAS,EAAED,oBAAK,CAACzH,IAAI,CAAC2H,KAAK,CAAC/H,QAAQC,GAAG,CAAC+H,cAAc,EAAEhI,QAAQC,GAAG,CAACgI,cAAc;QAE1HL,OAAOM,kBAAkB;QACzBrC,QAAQC,GAAG,CAAC;QACZ,OAAO8B;IACT,EAAE,OAAON,OAAO;QACdzB,QAAQC,GAAG,CAAC,CAAC,kCAAkC,EAAEwB,MAAM,CAAC;IAC1D;AACF;MAEA,WAAe7G"}